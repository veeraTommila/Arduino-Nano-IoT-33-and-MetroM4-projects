#include "Adafruit_VL53L0X.h"

Adafruit_VL53L0X lox = Adafruit_VL53L0X();
int ledRed = 7; // LED connected to digital pin 7

int buttonPushCounter = 0; // Used in the switch statement below

long time = 0; // Time since last action occured 
long debounce = 200; // Debounce time to increase if the output is flickering

volatile byte state_red = LOW;  //Punaisen LED-lampun tilatietomuuttuja, joka on käynnistyksessä 0.

void setup() {
  pinMode(ledRed, OUTPUT);  // sets the digital pin 7 as output
  Serial.begin(115200);

  // wait until serial port opens for native USB devices
  while (! Serial) {
    delay(1);
  }
  
  Serial.println("Adafruit VL53L0X test");
  if (!lox.begin()) {
    Serial.println(F("Failed to boot VL53L0X"));
    while(1);
  }
  // power 
  Serial.println(F("VL53L0X API Simple Ranging example\n\n")); 
 // attachInterrupt(digitalPinToInterrupt(ledRed), alarm, FALLING);  //Keskeytysmääritys painonapille 1, joka IO-tulona aiheuttaa keskeytyksen. Kutsutaan ohjelmaa alarm. Missä kohtaa keskeytys tapahtuu (falling, rising tai change).
// start continuous ranging
  lox.startRangeContinuous();  
}


void loop() {
  digitalWrite(ledRed, state_red);
  
  VL53L0X_RangingMeasurementData_t measure;
    
  //Serial.print("Luetaan mittauksia... ");
  lox.rangingTest(&measure, false); // pass in 'true' to get debug data printout!

  Serial.print("Etäisyys (mm): "); Serial.println(measure.RangeMilliMeter);    //Mitataan ja tulostetaan arvo.

//     
	if (measure.RangeMilliMeter >= 20 && measure.RangeMilliMeter <= 500) {
  		Serial.print("Olet liian lähellä!");
  		state_red = !state_red;  
	} else {state_red = state_red;
		//delay(500); 
	}   
    
}